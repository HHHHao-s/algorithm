#include "../s.h"

class Solution {
public:
    int maximumLength(vector<int>& nums) {
        
        int ans = 1;
        unordered_map<int, int> cnt;
        for(int num : nums){
            cnt[num]++;
        }
        
        
        for(auto [i,_]: cnt){
            if(i==1){
                continue;
            }
            long long last = i;
            int len = 0;
            while(1){
                if(last>=1000000000){
                    break;
                }
                if(cnt.count(last) && cnt[last]>=2){
                    last*=last;
                    len++;
                }else if(cnt.count(last) &&cnt[last]==1){
                    len++;
                    break;
                }else{
                    break;
                }

            }
            ans = max(ans, 2*len-1);

        }

        if(cnt.count(1)){
            if(cnt[1]%2==1){
                ans = max(ans, cnt[1]);
            }else{
                ans = max(ans, cnt[1]-1);
            }

        }

        return ans;
    }
};

int main(){
    Solution s;
    vector<int> arr={100,16,100,9,100,9,16,9,144,81,49,81,36,4,49,36,9,121,25,49,9,36,16,16,100,64,49,49,16,81,144,36,100,4,4,81,100,49,9,121,25,144,81,144,81,144,36,81,4,49,9,16,64,36,36,121,9,144,25,49,49,64,100,16,81,64,64,9,121,64,81,4,25,144,144,100,121,100,36,4,64,16,100,9,49,36,9,25,9,49,9,25,9,49,144,81,81,36,16,9,25,9,4,25,4,144,16,100,64,64,100,144,144,25,144,121,25,36,25,36,36,64,64,25,100,49,4,64,144,49,25,64,49,64,49,144,9,4,49,144,64,81,16,81,49,81,9,121,144,25,144,64,9,100,49,36,9,100,36,64,25,144,100,64,4,100,121,49,9,16,49,64,49,4,4,36,4,16,121,4,36,100,49,9,9,64,64,36,4,64,4,36,16,4,9,100,25,100,16,16,49,81,64,49,64,100,25,144,64,16,25,100,4,121,9,144,49,121,100,81,64,4,9,4,9,100,49,49,36,81,64,25,100,64,16,144,144,100,16,36,25,144,36,16,4,81,16,25,144,25,81,9,49,16,144,16,49,144,25,121,4,4,121,64,9,64,64,16,64,9,36,49,25,4,100,36,25,36,64,4,36,64,64,16,16,64,36,144,81,64,49,144,49,9,9,121,16,49,49,36,121,100,121,100,36,36,100,4,144,25,9,9,144,16,121,25,16,36,4,9,64,100,4,81,49,9,100,81,4,144,36,9,81,121,144,100,36,4,9,81,9,49,121,144,9,36,121,36,9,25,100,144,16,36,9,49,121,64,16,25,25,36,121,36,144,36,100,4,36,121,9,4,9,81,4,4,121,25,144,49,16,49,4,121,25,121,81,100,49,16,121,49,4,16,16,9,49,121,64,49,9,49,144,36,36,49,64,16,25,100,100,9,4,49,16,100,100,81,36,144,121,25,100,49,36,16,16,144,64,49,144,81,49,9,16,36,81,4,25,49,36,144,25,100,25,9,64,64,25,64,144,81,16,100,49,100,64,121,81,64,49,9,25,64,49,36,49,36,144,81,81,64,49,49,16,81,49,144,36,49,49,100,121,144,49,4,16,81,36,144,121,144,64,81,25,100,144,25,81,36,4,81,25,25,36,81,81,16,16,100,25,64,36,100,16,121,25,121,121,36,64,16,16,16,144,25,25,36,81,4,144,36,9,16,36,16,4,16,81,16,121,4,100,36,81,25,100,121,64,81,81,49,9,144,121,81,36,49,144,16,100,4,25,25,49,49,64,4,16,49,36,64,4,9,81,4,144,49,81,36,9,25,81,25,121,144,36,121,4,64,121,100,16,36,144,121,16,4,36,49,36,16,9,144,121,144,64,9,144,121,144,64,4,25,9,49,49,121,49,16,121,100,36,121,100,25,81,36,144,100,81,36,25,16,121,49,36,9,49,81,9,4,4,49,36,144,81,49,16,64,64,81,49,81,100,81,100,144,4,121,25,16,16,36,121,9,25,25,100,121,4,100,144,25,36,49,25,121,4,25,100,36,64,100,36,121,100,121,9,81,36,100,4,9,25,144,9,121,81,4,81,81,121,4,49,49,9,144,81,4,25,121,100,144,144,49,121,9,25,36,100,16,121,64,121,64,49,25,49,144,16,100,9,9,4,49,9,64,16,9,25,121,9,144,64,36,49,100,49,16,49,64,16,100,64,81,64,64,64,4,49,9,4,81,25,25,36,100,16,9,16,64,81,64,36,9,100,49,16,36,81,100,49,100,25,81,36,16,64,36,64,36,25,100,81,4,81,49,121,49,64,121,81,81,4,144,100,36,4,121,16,16,36,36,144,121,64,16,49,64,9,4,25,100,81,100,64,49,100,100,100,4,9,121,64,121,25,36,16,81,144,9,9,49,100,49,4,100,25,144,49,100,64,25,16,9,64,64,100,144,16,4,16,25,9,49,81,9,81,144,144,64,16,25,121,64,25,81,36,16,9,49,64,100,64,144,144,100,100,36,100,9,64,4,49,4,100,4,81,100,121,49,36,100,100,81,64,49,9,25,25,144,64,144,4,121,16,16,100,36,49,144,100,100,16,16,49,49,81,81,25,36,49,81,9,64,4,100,49,100,25,49,64,64,9,16,64,121,9,9,144,16,81,144,100,121,49,16,36,25,144,64,144,81,64,25,144,25,36,9,9,144,100,4,4,9,16,81,16,36,25,144,81,36,36,100,100,100,81,36,4,121,4,81,100,144,100,25,64,100};
    cout<< s.maximumLength(arr);
}